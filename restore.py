import pygame
import sys
import csv
from io import StringIO
import math

# 初始化 Pygame
pygame.init()

# 设置显示
width, height = 800, 600  # 根据原始屏幕大小调整
screen = pygame.display.set_mode((width, height))
pygame.display.set_caption("还原轨迹 - 分笔画")

# 颜色
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)

# 退出按钮字体
try:
    button_font = pygame.font.SysFont("simhei", 30)  # 使用 SimHei 支持中文
except:
    button_font = pygame.font.SysFont(None, 30)  # 回退到默认字体
exit_button_text = button_font.render("退出", True, WHITE)
exit_button_rect = pygame.Rect(width - 100, 10, 80, 40)
exit_button_color = RED

# 加载轨迹数据
csv_data = """x,y,timestamp
302,129,1750689946.0459526
303,134,1750689946.1523297
307,149,1750689946.1889565
310,160,1750689946.2065687
311,171,1750689946.2250042
311,186,1750689946.2425873
311,199,1750689946.2590375
311,211,1750689946.2756505
308,226,1750689946.3078113
307,244,1750689946.3290682
303,261,1750689946.3439763
299,277,1750689946.3605273
292,292,1750689946.3940203
288,304,1750689946.4103131
283,314,1750689946.4265895
279,324,1750689946.4436204
274,330,1750689946.4768612
271,336,1750689946.4936094
267,340,1750689946.510547
265,343,1750689946.5317166
263,345,1750689946.5642598
262,346,1750689946.5828753
263,348,1750689946.6672485
265,350,1750689946.684096
271,353,1750689946.704765
279,357,1750689946.723992
286,360,1750689946.7413542
294,364,1750689946.7590308
304,367,1750689946.7950463
313,372,1750689946.81331
325,375,1750689946.83024
336,380,1750689946.8465674
349,385,1750689946.863534
359,390,1750689946.897397
371,397,1750689946.9158971
382,402,1750689946.9319828
394,410,1750689946.9485927
406,415,1750689946.9821532
416,423,1750689947.0014315
426,432,1750689947.017644
436,439,1750689947.0352492
444,445,1750689947.0520952
450,450,1750689947.086802
457,456,1750689947.1039715
462,460,1750689947.1212642
468,464,1750689947.1368887
473,466,1750689947.1707952
475,470,1750689947.188064
476,470,1750689947.2044892
417,255,1750689947.4855309
417,260,1750689947.6207302
416,274,1750689947.6376774
413,285,1750689947.67273
409,299,1750689947.6902747
404,310,1750689947.706789
402,322,1750689947.7287104
399,335,1750689947.749189
395,346,1750689947.7655053
389,361,1750689947.8015437
382,374,1750689947.8173387
375,386,1750689947.8342369
367,401,1750689947.8502421
359,414,1750689947.8667636
350,428,1750689947.9099464
343,439,1750689947.9099464
336,447,1750689947.9474914
329,455,1750689947.963687
321,465,1750689947.9806936
313,477,1750689947.9978976
308,486,1750689948.0152626
303,493,1750689948.0499337
298,498,1750689948.0660224
292,499,1750689948.0843272
123,291,1750689948.5170584
135,292,1750689948.6455274
148,292,1750689948.6630082
161,292,1750689948.683844
173,292,1750689948.701675
187,292,1750689948.7328355
202,291,1750689948.7502928
217,289,1750689948.7674844
231,286,1750689948.7830675
247,285,1750689948.81744
266,283,1750689948.8336482
281,281,1750689948.850733
297,280,1750689948.8674207
313,277,1750689948.905062
329,274,1750689948.921766
345,269,1750689948.93871
362,265,1750689948.9571564
376,262,1750689948.972151
391,259,1750689949.0046544
406,255,1750689949.0224586
417,250,1750689949.038431
429,248,1750689949.054046
438,245,1750689949.0868852
444,243,1750689949.1057014
448,242,1750689949.1289816
452,242,1750689949.1437938
532,144,1750689949.3777533
544,146,1750689949.4769466
558,150,1750689949.493533
571,151,1750689949.5267255
587,153,1750689949.5446787
601,151,1750689949.5606341
613,150,1750689949.5774322
622,151,1750689949.6116812
631,153,1750689949.6282697
640,156,1750689949.644107
647,161,1750689949.6773996
653,165,1750689949.6951084
655,169,1750689949.7115955
654,180,1750689949.7288554
650,191,1750689949.770332
642,208,1750689949.770332
635,225,1750689949.7938886
627,243,1750689949.8284426
618,259,1750689949.8453217
610,274,1750689949.8620348
605,288,1750689949.8781605
603,300,1750689949.8949134
603,311,1750689949.9285736
605,324,1750689949.9453871
610,335,1750689949.962216
617,345,1750689949.9808896
626,360,1750689950.0145109
636,372,1750689950.0306149
645,384,1750689950.0478513
651,397,1750689950.0650008
656,411,1750689950.083231
659,423,1750689950.1178758
656,435,1750689950.135281
653,446,1750689950.1514778
644,456,1750689950.166954
633,465,1750689950.2008405
621,475,1750689950.2182739
603,480,1750689950.2360382
471,339,1750689950.489714
476,339,1750689950.6559477
490,337,1750689950.6720366
507,332,1750689950.6882021
523,327,1750689950.721037
540,324,1750689950.7385573
557,316,1750689950.754715
576,311,1750689950.788105
594,306,1750689950.810336
612,300,1750689950.82572
633,296,1750689950.8448353
655,291,1750689950.8606262
672,285,1750689950.8945897
691,281,1750689950.9117506
713,277,1750689950.931495
729,272,1750689950.9468524
746,268,1750689950.9631255
761,263,1750689950.999964
778,261,1750689951.016363
793,260,1750689951.0323515
807,257,1750689951.0488856
820,256,1750689951.0680022
830,255,1750689951.1035187
842,255,1750689951.1202226
854,255,1750689951.1376173
861,256,1750689951.1582172
866,256,1750689951.1742907
870,256,1750689951.2079203
871,257,1750689951.224549
870,257,1750689951.2406812
"""

# 解析 CSV 数据
points = []
reader = csv.DictReader(StringIO(csv_data))
for row in reader:
    x = float(row['x'])
    y = float(row['y'])
    timestamp = float(row['timestamp'])
    points.append((x, y, timestamp))

# 检测笔画分隔
stroke_points = []
current_stroke = []
time_threshold = 0.2  # 时间间隔阈值（秒），用于检测抬起
distance_threshold = 100  # 距离阈值（像素），用于检测抬起

for i in range(len(points)):
    x, y, timestamp = points[i]
    current_stroke.append((x, y))
    # 检查是否为新笔画
    if i < len(points) - 1:
        next_x, next_y, next_timestamp = points[i + 1]
        # 计算时间间隔和距离
        time_diff = next_timestamp - timestamp
        distance = math.sqrt((next_x - x) ** 2 + (next_y - y) ** 2)
        if time_diff > time_threshold or distance > distance_threshold:
            stroke_points.append(current_stroke)
            current_stroke = []

# 添加最后一笔
if current_stroke:
    stroke_points.append(current_stroke)

# 主循环
clock = pygame.time.Clock()
running = True
screen.fill(WHITE)

# 绘制每笔轨迹
for stroke in stroke_points:
    for i in range(1, len(stroke)):
        pygame.draw.line(screen, BLACK, stroke[i-1], stroke[i], 2)

while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        elif event.type == pygame.MOUSEBUTTONDOWN:
            if exit_button_rect.collidepoint(event.pos):
                running = False

    # 绘制退出按钮
    pygame.draw.rect(screen, exit_button_color, exit_button_rect)
    screen.blit(exit_button_text, (exit_button_rect.x + 10, exit_button_rect.y + 5))

    # 更新屏幕
    pygame.display.flip()
    clock.tick(60)

# 清理
pygame.quit()
sys.exit()